The Open Source project Sojo has announced the third release (version 0.3.0). 
The intention for this project is a Java framework, that convert JavaBeans in a simplified representation . 
So it is easy and uniformly to handle and control the access to JavaBeans properties. 
This framework want to complement POJOs, where Java communicate with "other worlds. Other worlds are interfaces, 
where object orientation is not supported or is not the best decision.

For example:
# data interchange (interchange):

    * JSON (JavaScript Object Notation) a lightweight data-interchange format
    * Object To XML - where is XML-RPC a special case
    * Comma Separated Values (CSV)
    * Java serialization, without implements the interface java.io.Serializable (e.g. cluster, cache, remote communication, ...)

# operation of complex Java-Objects-graphs (common / navigation):

    * copy or clone complex object graph (can manage different versions from one object graph (object history))
    * compare complex object graph
    * walk over object graph (to traverse)
    * extend objects to additional information (e.g.: object-versions (number of changes), data changed date or changed user)
    * easy navigate on the complex object graph (with a navigation language)
    * mapping from one property to other property (name to name mapping (by naming conflicts) or value to value mapping (to convert values))
    * making object-values immutable, for testing concurrent access - multi threading)



In cases, where object orientation and not object orientation must work together, exist the problem of independent mismatched. 
The SOJO want to do this problem a little bit smaller. 

The main Feature:
- Filter for properties. Not all properties of a class want to include by converting objects. Especial by interchange data are not all data (properties) relevant. 
		With a filter can select the (transient) properties, that are filtered by serialize objects (Feature Request: 1612707, thanks G. Greg).
- Refactor package and class-names (remove common loggings library and replace with net.sf.sojo.core.NonCriticalExceptionHandler) (Feature Request: 1615202).
- Remove all dependencies to external libraries (Feature Request: 1625003)


The main Bug fixes:
- Can't call twice time the method ObjectUtil.makeSimple. By the second call is the result the same, how call of method ObjectUtil.makeComplex (Bug: 1622475).
- The result-Maps of ReflectionMethodHelper are modifiable (e.g. getAllGetterMethod).
   This is critical, because this Map's are static. If one instance this map change, work all instances with this changed map (Bug: 1621357).
- JsonSerializer serialize Map with no String key not correct. This mean, the key was ignored (Bug: 1615199).
- JsonSerializer don't wrapped in double quotes and using backslash escapes (Bug: 1616053, thanks T. Nagy).


Homepage:

http://sojo.sourceforge.net

Download: 

http://sourceforge.net/project/showfiles.php?group_id=178713
